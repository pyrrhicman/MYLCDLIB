
mlcd_CPU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008a6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000091a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000016  00800060  00800060  0000091a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000091a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000094c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001093  00000000  00000000  000009c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f2  00000000  00000000  00001a5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000572  00000000  00000000  0000214d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000ac  00000000  00000000  000026c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000060c  00000000  00000000  0000276c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000769  00000000  00000000  00002d78  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000034e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2b 00 	jmp	0x56	; 0x56 <__ctors_end>
   4:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   8:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  10:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  14:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  18:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  1c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  20:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  24:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  28:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  2c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  30:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  34:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  38:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  3c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  40:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  44:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  48:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  4c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  50:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>

00000054 <__ctors_start>:
  54:	46 04       	cpc	r4, r6

00000056 <__ctors_end>:
  56:	11 24       	eor	r1, r1
  58:	1f be       	out	0x3f, r1	; 63
  5a:	cf e5       	ldi	r28, 0x5F	; 95
  5c:	d8 e0       	ldi	r29, 0x08	; 8
  5e:	de bf       	out	0x3e, r29	; 62
  60:	cd bf       	out	0x3d, r28	; 61

00000062 <__do_clear_bss>:
  62:	20 e0       	ldi	r18, 0x00	; 0
  64:	a0 e6       	ldi	r26, 0x60	; 96
  66:	b0 e0       	ldi	r27, 0x00	; 0
  68:	01 c0       	rjmp	.+2      	; 0x6c <.do_clear_bss_start>

0000006a <.do_clear_bss_loop>:
  6a:	1d 92       	st	X+, r1

0000006c <.do_clear_bss_start>:
  6c:	a6 37       	cpi	r26, 0x76	; 118
  6e:	b2 07       	cpc	r27, r18
  70:	e1 f7       	brne	.-8      	; 0x6a <.do_clear_bss_loop>

00000072 <__do_global_ctors>:
  72:	10 e0       	ldi	r17, 0x00	; 0
  74:	cb e2       	ldi	r28, 0x2B	; 43
  76:	d0 e0       	ldi	r29, 0x00	; 0
  78:	04 c0       	rjmp	.+8      	; 0x82 <__do_global_ctors+0x10>
  7a:	21 97       	sbiw	r28, 0x01	; 1
  7c:	fe 01       	movw	r30, r28
  7e:	0e 94 4b 04 	call	0x896	; 0x896 <__tablejump2__>
  82:	ca 32       	cpi	r28, 0x2A	; 42
  84:	d1 07       	cpc	r29, r17
  86:	c9 f7       	brne	.-14     	; 0x7a <__do_global_ctors+0x8>
  88:	0e 94 1d 04 	call	0x83a	; 0x83a <main>
  8c:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <_exit>

00000090 <__bad_interrupt>:
  90:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000094 <_ZN6CH_LCDC1Ev>:
ï»¿#include "mlcd.h"
#define E_DELAY 1
# ifdef _CH_LCD_


CH_LCD :: CH_LCD ()
  94:	fc 01       	movw	r30, r24
{
	RS_PORT = 0x1B ; RS_DDR = 0x1A ; RS_Bit = 0 ;
  96:	9b e1       	ldi	r25, 0x1B	; 27
  98:	90 83       	st	Z, r25
  9a:	8a e1       	ldi	r24, 0x1A	; 26
  9c:	81 83       	std	Z+1, r24	; 0x01
  9e:	12 82       	std	Z+2, r1	; 0x02
	RW_PORT = 0x1B ; RW_DDR = 0x1A ; RW_Bit = 1 ;
  a0:	93 83       	std	Z+3, r25	; 0x03
  a2:	84 83       	std	Z+4, r24	; 0x04
  a4:	21 e0       	ldi	r18, 0x01	; 1
  a6:	25 83       	std	Z+5, r18	; 0x05
	E_PORT = 0x1B ; E_DDR = 0x1A ; E_Bit  = 2 ;
  a8:	96 83       	std	Z+6, r25	; 0x06
  aa:	87 83       	std	Z+7, r24	; 0x07
  ac:	22 e0       	ldi	r18, 0x02	; 2
  ae:	20 87       	std	Z+8, r18	; 0x08

	D4_PORT = 0x1B ; D4_DDR = 0x1A ; D4_Bit = 3 ;
  b0:	91 87       	std	Z+9, r25	; 0x09
  b2:	82 87       	std	Z+10, r24	; 0x0a
  b4:	23 e0       	ldi	r18, 0x03	; 3
  b6:	23 87       	std	Z+11, r18	; 0x0b
	D5_PORT = 0x1B ; D5_DDR = 0x1A ; D5_Bit = 4 ;
  b8:	94 87       	std	Z+12, r25	; 0x0c
  ba:	85 87       	std	Z+13, r24	; 0x0d
  bc:	24 e0       	ldi	r18, 0x04	; 4
  be:	26 87       	std	Z+14, r18	; 0x0e
	D6_PORT = 0x1B ; D6_DDR = 0x1A ; D6_Bit = 5 ;
  c0:	97 87       	std	Z+15, r25	; 0x0f
  c2:	80 8b       	std	Z+16, r24	; 0x10
  c4:	25 e0       	ldi	r18, 0x05	; 5
  c6:	21 8b       	std	Z+17, r18	; 0x11
	D7_PORT = 0x1B ; D7_DDR = 0x1A ; D7_Bit = 6 ;	
  c8:	92 8b       	std	Z+18, r25	; 0x12
  ca:	83 8b       	std	Z+19, r24	; 0x13
  cc:	86 e0       	ldi	r24, 0x06	; 6
  ce:	84 8b       	std	Z+20, r24	; 0x14
  d0:	08 95       	ret

000000d2 <_ZN6CH_LCD11SendCommandEhhh>:


}

void CH_LCD :: SendCommand(uint8_t rs_Bit,uint8_t rw_Bit,uint8_t command)	//Sends Command to LCD
{	
  d2:	8f 92       	push	r8
  d4:	9f 92       	push	r9
  d6:	af 92       	push	r10
  d8:	bf 92       	push	r11
  da:	cf 92       	push	r12
  dc:	df 92       	push	r13
  de:	ef 92       	push	r14
  e0:	ff 92       	push	r15
  e2:	0f 93       	push	r16
  e4:	1f 93       	push	r17
  e6:	cf 93       	push	r28
  e8:	df 93       	push	r29
  ea:	fc 01       	movw	r30, r24
	uint8_t lcd_D0 = command >> 0;
	uint8_t lcd_D1 = command >> 1;
  ec:	82 2f       	mov	r24, r18
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	4c 01       	movw	r8, r24
  f2:	95 94       	asr	r9
  f4:	87 94       	ror	r8
	uint8_t lcd_D2 = command >> 2;
  f6:	ec 01       	movw	r28, r24
  f8:	d5 95       	asr	r29
  fa:	c7 95       	ror	r28
  fc:	d5 95       	asr	r29
  fe:	c7 95       	ror	r28
	uint8_t lcd_D3 = command >> 3;
 100:	8c 01       	movw	r16, r24
 102:	15 95       	asr	r17
 104:	07 95       	ror	r16
 106:	15 95       	asr	r17
 108:	07 95       	ror	r16
 10a:	15 95       	asr	r17
 10c:	07 95       	ror	r16
	uint8_t lcd_D4 = command >> 4;
 10e:	7c 01       	movw	r14, r24
 110:	f5 94       	asr	r15
 112:	e7 94       	ror	r14
 114:	f5 94       	asr	r15
 116:	e7 94       	ror	r14
 118:	f5 94       	asr	r15
 11a:	e7 94       	ror	r14
 11c:	f5 94       	asr	r15
 11e:	e7 94       	ror	r14
	uint8_t lcd_D5 = command >> 5;
 120:	6c 01       	movw	r12, r24
 122:	d5 94       	asr	r13
 124:	c7 94       	ror	r12
 126:	d5 94       	asr	r13
 128:	c7 94       	ror	r12
 12a:	d5 94       	asr	r13
 12c:	c7 94       	ror	r12
 12e:	d5 94       	asr	r13
 130:	c7 94       	ror	r12
 132:	d5 94       	asr	r13
 134:	c7 94       	ror	r12
	uint8_t lcd_D6 = command >> 6;
 136:	5c 01       	movw	r10, r24
 138:	0a 2c       	mov	r0, r10
 13a:	ab 2c       	mov	r10, r11
 13c:	00 0c       	add	r0, r0
 13e:	aa 1c       	adc	r10, r10
 140:	bb 08       	sbc	r11, r11
 142:	00 0c       	add	r0, r0
 144:	aa 1c       	adc	r10, r10
 146:	bb 1c       	adc	r11, r11
	uint8_t lcd_D7 = command >> 7;
 148:	88 0f       	add	r24, r24
 14a:	89 2f       	mov	r24, r25
 14c:	88 1f       	adc	r24, r24
 14e:	99 0b       	sbc	r25, r25
	
// MSB BITS READY
	if (rs_Bit & 1)  _SFR_IO8(RS_PORT) |=   1<<RS_Bit ;
 150:	60 ff       	sbrs	r22, 0
 152:	11 c0       	rjmp	.+34     	; 0x176 <_ZN6CH_LCD11SendCommandEhhh+0xa4>
 154:	a0 81       	ld	r26, Z
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	90 96       	adiw	r26, 0x20	; 32
 15a:	3c 91       	ld	r19, X
 15c:	90 97       	sbiw	r26, 0x20	; 32
 15e:	61 e0       	ldi	r22, 0x01	; 1
 160:	70 e0       	ldi	r23, 0x00	; 0
 162:	02 80       	ldd	r0, Z+2	; 0x02
 164:	02 c0       	rjmp	.+4      	; 0x16a <_ZN6CH_LCD11SendCommandEhhh+0x98>
 166:	66 0f       	add	r22, r22
 168:	77 1f       	adc	r23, r23
 16a:	0a 94       	dec	r0
 16c:	e2 f7       	brpl	.-8      	; 0x166 <_ZN6CH_LCD11SendCommandEhhh+0x94>
 16e:	63 2b       	or	r22, r19
 170:	90 96       	adiw	r26, 0x20	; 32
 172:	6c 93       	st	X, r22
 174:	11 c0       	rjmp	.+34     	; 0x198 <_ZN6CH_LCD11SendCommandEhhh+0xc6>
	else			 _SFR_IO8(RS_PORT) &= ~(1<<RS_Bit);
 176:	a0 81       	ld	r26, Z
 178:	b0 e0       	ldi	r27, 0x00	; 0
 17a:	90 96       	adiw	r26, 0x20	; 32
 17c:	3c 91       	ld	r19, X
 17e:	90 97       	sbiw	r26, 0x20	; 32
 180:	61 e0       	ldi	r22, 0x01	; 1
 182:	70 e0       	ldi	r23, 0x00	; 0
 184:	02 80       	ldd	r0, Z+2	; 0x02
 186:	02 c0       	rjmp	.+4      	; 0x18c <_ZN6CH_LCD11SendCommandEhhh+0xba>
 188:	66 0f       	add	r22, r22
 18a:	77 1f       	adc	r23, r23
 18c:	0a 94       	dec	r0
 18e:	e2 f7       	brpl	.-8      	; 0x188 <_ZN6CH_LCD11SendCommandEhhh+0xb6>
 190:	60 95       	com	r22
 192:	63 23       	and	r22, r19
 194:	90 96       	adiw	r26, 0x20	; 32
 196:	6c 93       	st	X, r22
	
	if (rw_Bit & 1)  _SFR_IO8(RW_PORT) |=   1<<RW_Bit ;
 198:	40 ff       	sbrs	r20, 0
 19a:	11 c0       	rjmp	.+34     	; 0x1be <_ZN6CH_LCD11SendCommandEhhh+0xec>
 19c:	a3 81       	ldd	r26, Z+3	; 0x03
 19e:	b0 e0       	ldi	r27, 0x00	; 0
 1a0:	90 96       	adiw	r26, 0x20	; 32
 1a2:	3c 91       	ld	r19, X
 1a4:	90 97       	sbiw	r26, 0x20	; 32
 1a6:	41 e0       	ldi	r20, 0x01	; 1
 1a8:	50 e0       	ldi	r21, 0x00	; 0
 1aa:	05 80       	ldd	r0, Z+5	; 0x05
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <_ZN6CH_LCD11SendCommandEhhh+0xe0>
 1ae:	44 0f       	add	r20, r20
 1b0:	55 1f       	adc	r21, r21
 1b2:	0a 94       	dec	r0
 1b4:	e2 f7       	brpl	.-8      	; 0x1ae <_ZN6CH_LCD11SendCommandEhhh+0xdc>
 1b6:	43 2b       	or	r20, r19
 1b8:	90 96       	adiw	r26, 0x20	; 32
 1ba:	4c 93       	st	X, r20
 1bc:	11 c0       	rjmp	.+34     	; 0x1e0 <_ZN6CH_LCD11SendCommandEhhh+0x10e>
	else			 _SFR_IO8(RW_PORT) &= ~(1<<RW_Bit);
 1be:	a3 81       	ldd	r26, Z+3	; 0x03
 1c0:	b0 e0       	ldi	r27, 0x00	; 0
 1c2:	90 96       	adiw	r26, 0x20	; 32
 1c4:	3c 91       	ld	r19, X
 1c6:	90 97       	sbiw	r26, 0x20	; 32
 1c8:	41 e0       	ldi	r20, 0x01	; 1
 1ca:	50 e0       	ldi	r21, 0x00	; 0
 1cc:	05 80       	ldd	r0, Z+5	; 0x05
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <_ZN6CH_LCD11SendCommandEhhh+0x102>
 1d0:	44 0f       	add	r20, r20
 1d2:	55 1f       	adc	r21, r21
 1d4:	0a 94       	dec	r0
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <_ZN6CH_LCD11SendCommandEhhh+0xfe>
 1d8:	40 95       	com	r20
 1da:	43 23       	and	r20, r19
 1dc:	90 96       	adiw	r26, 0x20	; 32
 1de:	4c 93       	st	X, r20
	
	if (lcd_D7 & 1)  _SFR_IO8(D7_PORT) |=   1<<D7_Bit ;	
 1e0:	80 ff       	sbrs	r24, 0
 1e2:	11 c0       	rjmp	.+34     	; 0x206 <_ZN6CH_LCD11SendCommandEhhh+0x134>
 1e4:	a2 89       	ldd	r26, Z+18	; 0x12
 1e6:	b0 e0       	ldi	r27, 0x00	; 0
 1e8:	90 96       	adiw	r26, 0x20	; 32
 1ea:	3c 91       	ld	r19, X
 1ec:	90 97       	sbiw	r26, 0x20	; 32
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	04 88       	ldd	r0, Z+20	; 0x14
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <_ZN6CH_LCD11SendCommandEhhh+0x128>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	0a 94       	dec	r0
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <_ZN6CH_LCD11SendCommandEhhh+0x124>
 1fe:	83 2b       	or	r24, r19
 200:	90 96       	adiw	r26, 0x20	; 32
 202:	8c 93       	st	X, r24
 204:	11 c0       	rjmp	.+34     	; 0x228 <_ZN6CH_LCD11SendCommandEhhh+0x156>
	else			 _SFR_IO8(D7_PORT) &= ~(1<<D7_Bit);	
 206:	a2 89       	ldd	r26, Z+18	; 0x12
 208:	b0 e0       	ldi	r27, 0x00	; 0
 20a:	90 96       	adiw	r26, 0x20	; 32
 20c:	3c 91       	ld	r19, X
 20e:	90 97       	sbiw	r26, 0x20	; 32
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	04 88       	ldd	r0, Z+20	; 0x14
 216:	02 c0       	rjmp	.+4      	; 0x21c <_ZN6CH_LCD11SendCommandEhhh+0x14a>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	0a 94       	dec	r0
 21e:	e2 f7       	brpl	.-8      	; 0x218 <_ZN6CH_LCD11SendCommandEhhh+0x146>
 220:	80 95       	com	r24
 222:	83 23       	and	r24, r19
 224:	90 96       	adiw	r26, 0x20	; 32
 226:	8c 93       	st	X, r24

	if (lcd_D6 & 1)  _SFR_IO8(D6_PORT) |=   1<<D6_Bit ;
 228:	a0 fe       	sbrs	r10, 0
 22a:	11 c0       	rjmp	.+34     	; 0x24e <_ZN6CH_LCD11SendCommandEhhh+0x17c>
 22c:	a7 85       	ldd	r26, Z+15	; 0x0f
 22e:	b0 e0       	ldi	r27, 0x00	; 0
 230:	90 96       	adiw	r26, 0x20	; 32
 232:	3c 91       	ld	r19, X
 234:	90 97       	sbiw	r26, 0x20	; 32
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	01 88       	ldd	r0, Z+17	; 0x11
 23c:	02 c0       	rjmp	.+4      	; 0x242 <_ZN6CH_LCD11SendCommandEhhh+0x170>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	0a 94       	dec	r0
 244:	e2 f7       	brpl	.-8      	; 0x23e <_ZN6CH_LCD11SendCommandEhhh+0x16c>
 246:	83 2b       	or	r24, r19
 248:	90 96       	adiw	r26, 0x20	; 32
 24a:	8c 93       	st	X, r24
 24c:	11 c0       	rjmp	.+34     	; 0x270 <_ZN6CH_LCD11SendCommandEhhh+0x19e>
	else			 _SFR_IO8(D6_PORT) &= ~(1<<D6_Bit);
 24e:	a7 85       	ldd	r26, Z+15	; 0x0f
 250:	b0 e0       	ldi	r27, 0x00	; 0
 252:	90 96       	adiw	r26, 0x20	; 32
 254:	3c 91       	ld	r19, X
 256:	90 97       	sbiw	r26, 0x20	; 32
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	01 88       	ldd	r0, Z+17	; 0x11
 25e:	02 c0       	rjmp	.+4      	; 0x264 <_ZN6CH_LCD11SendCommandEhhh+0x192>
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	0a 94       	dec	r0
 266:	e2 f7       	brpl	.-8      	; 0x260 <_ZN6CH_LCD11SendCommandEhhh+0x18e>
 268:	80 95       	com	r24
 26a:	83 23       	and	r24, r19
 26c:	90 96       	adiw	r26, 0x20	; 32
 26e:	8c 93       	st	X, r24
	
	if (lcd_D5 & 1)  _SFR_IO8(D5_PORT) |=   1<<D5_Bit ;
 270:	c0 fe       	sbrs	r12, 0
 272:	11 c0       	rjmp	.+34     	; 0x296 <_ZN6CH_LCD11SendCommandEhhh+0x1c4>
 274:	a4 85       	ldd	r26, Z+12	; 0x0c
 276:	b0 e0       	ldi	r27, 0x00	; 0
 278:	90 96       	adiw	r26, 0x20	; 32
 27a:	3c 91       	ld	r19, X
 27c:	90 97       	sbiw	r26, 0x20	; 32
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	06 84       	ldd	r0, Z+14	; 0x0e
 284:	02 c0       	rjmp	.+4      	; 0x28a <_ZN6CH_LCD11SendCommandEhhh+0x1b8>
 286:	88 0f       	add	r24, r24
 288:	99 1f       	adc	r25, r25
 28a:	0a 94       	dec	r0
 28c:	e2 f7       	brpl	.-8      	; 0x286 <_ZN6CH_LCD11SendCommandEhhh+0x1b4>
 28e:	83 2b       	or	r24, r19
 290:	90 96       	adiw	r26, 0x20	; 32
 292:	8c 93       	st	X, r24
 294:	11 c0       	rjmp	.+34     	; 0x2b8 <_ZN6CH_LCD11SendCommandEhhh+0x1e6>
	else			 _SFR_IO8(D5_PORT) &= ~(1<<D5_Bit);
 296:	a4 85       	ldd	r26, Z+12	; 0x0c
 298:	b0 e0       	ldi	r27, 0x00	; 0
 29a:	90 96       	adiw	r26, 0x20	; 32
 29c:	3c 91       	ld	r19, X
 29e:	90 97       	sbiw	r26, 0x20	; 32
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	06 84       	ldd	r0, Z+14	; 0x0e
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <_ZN6CH_LCD11SendCommandEhhh+0x1da>
 2a8:	88 0f       	add	r24, r24
 2aa:	99 1f       	adc	r25, r25
 2ac:	0a 94       	dec	r0
 2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <_ZN6CH_LCD11SendCommandEhhh+0x1d6>
 2b0:	80 95       	com	r24
 2b2:	83 23       	and	r24, r19
 2b4:	90 96       	adiw	r26, 0x20	; 32
 2b6:	8c 93       	st	X, r24
	
	if (lcd_D4 & 1)  _SFR_IO8(D4_PORT) |=   1<<D4_Bit ;
 2b8:	e0 fe       	sbrs	r14, 0
 2ba:	11 c0       	rjmp	.+34     	; 0x2de <_ZN6CH_LCD11SendCommandEhhh+0x20c>
 2bc:	a1 85       	ldd	r26, Z+9	; 0x09
 2be:	b0 e0       	ldi	r27, 0x00	; 0
 2c0:	90 96       	adiw	r26, 0x20	; 32
 2c2:	3c 91       	ld	r19, X
 2c4:	90 97       	sbiw	r26, 0x20	; 32
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	03 84       	ldd	r0, Z+11	; 0x0b
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <_ZN6CH_LCD11SendCommandEhhh+0x200>
 2ce:	88 0f       	add	r24, r24
 2d0:	99 1f       	adc	r25, r25
 2d2:	0a 94       	dec	r0
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <_ZN6CH_LCD11SendCommandEhhh+0x1fc>
 2d6:	83 2b       	or	r24, r19
 2d8:	90 96       	adiw	r26, 0x20	; 32
 2da:	8c 93       	st	X, r24
 2dc:	11 c0       	rjmp	.+34     	; 0x300 <_ZN6CH_LCD11SendCommandEhhh+0x22e>
	else			 _SFR_IO8(D4_PORT) &= ~(1<<D4_Bit);
 2de:	a1 85       	ldd	r26, Z+9	; 0x09
 2e0:	b0 e0       	ldi	r27, 0x00	; 0
 2e2:	90 96       	adiw	r26, 0x20	; 32
 2e4:	3c 91       	ld	r19, X
 2e6:	90 97       	sbiw	r26, 0x20	; 32
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	03 84       	ldd	r0, Z+11	; 0x0b
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <_ZN6CH_LCD11SendCommandEhhh+0x222>
 2f0:	88 0f       	add	r24, r24
 2f2:	99 1f       	adc	r25, r25
 2f4:	0a 94       	dec	r0
 2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <_ZN6CH_LCD11SendCommandEhhh+0x21e>
 2f8:	80 95       	com	r24
 2fa:	83 23       	and	r24, r19
 2fc:	90 96       	adiw	r26, 0x20	; 32
 2fe:	8c 93       	st	X, r24

	/*SENDING*/
	_SFR_IO8(E_PORT)  |=   1<<E_Bit  ;
 300:	a6 81       	ldd	r26, Z+6	; 0x06
 302:	b0 e0       	ldi	r27, 0x00	; 0
 304:	90 96       	adiw	r26, 0x20	; 32
 306:	3c 91       	ld	r19, X
 308:	90 97       	sbiw	r26, 0x20	; 32
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	ac 01       	movw	r20, r24
 310:	00 84       	ldd	r0, Z+8	; 0x08
 312:	02 c0       	rjmp	.+4      	; 0x318 <_ZN6CH_LCD11SendCommandEhhh+0x246>
 314:	44 0f       	add	r20, r20
 316:	55 1f       	adc	r21, r21
 318:	0a 94       	dec	r0
 31a:	e2 f7       	brpl	.-8      	; 0x314 <_ZN6CH_LCD11SendCommandEhhh+0x242>
 31c:	43 2b       	or	r20, r19
 31e:	90 96       	adiw	r26, 0x20	; 32
 320:	4c 93       	st	X, r20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 322:	af ec       	ldi	r26, 0xCF	; 207
 324:	b7 e0       	ldi	r27, 0x07	; 7
 326:	11 97       	sbiw	r26, 0x01	; 1
 328:	f1 f7       	brne	.-4      	; 0x326 <_ZN6CH_LCD11SendCommandEhhh+0x254>
 32a:	00 c0       	rjmp	.+0      	; 0x32c <_ZN6CH_LCD11SendCommandEhhh+0x25a>
 32c:	00 00       	nop
	_delay_ms(E_DELAY);
	_SFR_IO8(E_PORT)  &=~(1<<E_Bit);  // All other bits untouched and E = 0
 32e:	a6 81       	ldd	r26, Z+6	; 0x06
 330:	b0 e0       	ldi	r27, 0x00	; 0
 332:	90 96       	adiw	r26, 0x20	; 32
 334:	3c 91       	ld	r19, X
 336:	90 97       	sbiw	r26, 0x20	; 32
 338:	00 84       	ldd	r0, Z+8	; 0x08
 33a:	02 c0       	rjmp	.+4      	; 0x340 <_ZN6CH_LCD11SendCommandEhhh+0x26e>
 33c:	88 0f       	add	r24, r24
 33e:	99 1f       	adc	r25, r25
 340:	0a 94       	dec	r0
 342:	e2 f7       	brpl	.-8      	; 0x33c <_ZN6CH_LCD11SendCommandEhhh+0x26a>
 344:	80 95       	com	r24
 346:	83 23       	and	r24, r19
 348:	90 96       	adiw	r26, 0x20	; 32
 34a:	8c 93       	st	X, r24
 34c:	8f ec       	ldi	r24, 0xCF	; 207
 34e:	97 e0       	ldi	r25, 0x07	; 7
 350:	01 97       	sbiw	r24, 0x01	; 1
 352:	f1 f7       	brne	.-4      	; 0x350 <_ZN6CH_LCD11SendCommandEhhh+0x27e>
 354:	00 c0       	rjmp	.+0      	; 0x356 <_ZN6CH_LCD11SendCommandEhhh+0x284>
 356:	00 00       	nop
	_delay_ms(E_DELAY);
	/* SENDING Finished */

	
	// LSB BITS READY
	if (lcd_D3 & 1)  _SFR_IO8(D7_PORT) |=   1<<D7_Bit ;
 358:	00 ff       	sbrs	r16, 0
 35a:	11 c0       	rjmp	.+34     	; 0x37e <_ZN6CH_LCD11SendCommandEhhh+0x2ac>
 35c:	a2 89       	ldd	r26, Z+18	; 0x12
 35e:	b0 e0       	ldi	r27, 0x00	; 0
 360:	90 96       	adiw	r26, 0x20	; 32
 362:	3c 91       	ld	r19, X
 364:	90 97       	sbiw	r26, 0x20	; 32
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	04 88       	ldd	r0, Z+20	; 0x14
 36c:	02 c0       	rjmp	.+4      	; 0x372 <_ZN6CH_LCD11SendCommandEhhh+0x2a0>
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	0a 94       	dec	r0
 374:	e2 f7       	brpl	.-8      	; 0x36e <_ZN6CH_LCD11SendCommandEhhh+0x29c>
 376:	83 2b       	or	r24, r19
 378:	90 96       	adiw	r26, 0x20	; 32
 37a:	8c 93       	st	X, r24
 37c:	11 c0       	rjmp	.+34     	; 0x3a0 <_ZN6CH_LCD11SendCommandEhhh+0x2ce>
	else			 _SFR_IO8(D7_PORT) &= ~(1<<D7_Bit);
 37e:	a2 89       	ldd	r26, Z+18	; 0x12
 380:	b0 e0       	ldi	r27, 0x00	; 0
 382:	90 96       	adiw	r26, 0x20	; 32
 384:	3c 91       	ld	r19, X
 386:	90 97       	sbiw	r26, 0x20	; 32
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	04 88       	ldd	r0, Z+20	; 0x14
 38e:	02 c0       	rjmp	.+4      	; 0x394 <_ZN6CH_LCD11SendCommandEhhh+0x2c2>
 390:	88 0f       	add	r24, r24
 392:	99 1f       	adc	r25, r25
 394:	0a 94       	dec	r0
 396:	e2 f7       	brpl	.-8      	; 0x390 <_ZN6CH_LCD11SendCommandEhhh+0x2be>
 398:	80 95       	com	r24
 39a:	83 23       	and	r24, r19
 39c:	90 96       	adiw	r26, 0x20	; 32
 39e:	8c 93       	st	X, r24

	if (lcd_D2 & 1)  _SFR_IO8(D6_PORT) |=   1<<D6_Bit ;
 3a0:	c0 ff       	sbrs	r28, 0
 3a2:	11 c0       	rjmp	.+34     	; 0x3c6 <_ZN6CH_LCD11SendCommandEhhh+0x2f4>
 3a4:	a7 85       	ldd	r26, Z+15	; 0x0f
 3a6:	b0 e0       	ldi	r27, 0x00	; 0
 3a8:	90 96       	adiw	r26, 0x20	; 32
 3aa:	3c 91       	ld	r19, X
 3ac:	90 97       	sbiw	r26, 0x20	; 32
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	01 88       	ldd	r0, Z+17	; 0x11
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <_ZN6CH_LCD11SendCommandEhhh+0x2e8>
 3b6:	88 0f       	add	r24, r24
 3b8:	99 1f       	adc	r25, r25
 3ba:	0a 94       	dec	r0
 3bc:	e2 f7       	brpl	.-8      	; 0x3b6 <_ZN6CH_LCD11SendCommandEhhh+0x2e4>
 3be:	83 2b       	or	r24, r19
 3c0:	90 96       	adiw	r26, 0x20	; 32
 3c2:	8c 93       	st	X, r24
 3c4:	11 c0       	rjmp	.+34     	; 0x3e8 <_ZN6CH_LCD11SendCommandEhhh+0x316>
	else			 _SFR_IO8(D6_PORT) &= ~(1<<D6_Bit);
 3c6:	a7 85       	ldd	r26, Z+15	; 0x0f
 3c8:	b0 e0       	ldi	r27, 0x00	; 0
 3ca:	90 96       	adiw	r26, 0x20	; 32
 3cc:	3c 91       	ld	r19, X
 3ce:	90 97       	sbiw	r26, 0x20	; 32
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	01 88       	ldd	r0, Z+17	; 0x11
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <_ZN6CH_LCD11SendCommandEhhh+0x30a>
 3d8:	88 0f       	add	r24, r24
 3da:	99 1f       	adc	r25, r25
 3dc:	0a 94       	dec	r0
 3de:	e2 f7       	brpl	.-8      	; 0x3d8 <_ZN6CH_LCD11SendCommandEhhh+0x306>
 3e0:	80 95       	com	r24
 3e2:	83 23       	and	r24, r19
 3e4:	90 96       	adiw	r26, 0x20	; 32
 3e6:	8c 93       	st	X, r24

	if (lcd_D1 & 1)  _SFR_IO8(D5_PORT) |=   1<<D5_Bit ;
 3e8:	80 fe       	sbrs	r8, 0
 3ea:	11 c0       	rjmp	.+34     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3ec:	a4 85       	ldd	r26, Z+12	; 0x0c
 3ee:	b0 e0       	ldi	r27, 0x00	; 0
 3f0:	90 96       	adiw	r26, 0x20	; 32
 3f2:	3c 91       	ld	r19, X
 3f4:	90 97       	sbiw	r26, 0x20	; 32
 3f6:	81 e0       	ldi	r24, 0x01	; 1
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	06 84       	ldd	r0, Z+14	; 0x0e
 3fc:	02 c0       	rjmp	.+4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fe:	88 0f       	add	r24, r24
 400:	99 1f       	adc	r25, r25
 402:	0a 94       	dec	r0
 404:	e2 f7       	brpl	.-8      	; 0x3fe <_ZN6CH_LCD11SendCommandEhhh+0x32c>
 406:	83 2b       	or	r24, r19
 408:	90 96       	adiw	r26, 0x20	; 32
 40a:	8c 93       	st	X, r24
 40c:	11 c0       	rjmp	.+34     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
	else			 _SFR_IO8(D5_PORT) &= ~(1<<D5_Bit);
 40e:	a4 85       	ldd	r26, Z+12	; 0x0c
 410:	b0 e0       	ldi	r27, 0x00	; 0
 412:	90 96       	adiw	r26, 0x20	; 32
 414:	3c 91       	ld	r19, X
 416:	90 97       	sbiw	r26, 0x20	; 32
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	06 84       	ldd	r0, Z+14	; 0x0e
 41e:	02 c0       	rjmp	.+4      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 420:	88 0f       	add	r24, r24
 422:	99 1f       	adc	r25, r25
 424:	0a 94       	dec	r0
 426:	e2 f7       	brpl	.-8      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 428:	80 95       	com	r24
 42a:	83 23       	and	r24, r19
 42c:	90 96       	adiw	r26, 0x20	; 32
 42e:	8c 93       	st	X, r24
	
	if (lcd_D0 & 1)  _SFR_IO8(D4_PORT) |=   1<<D4_Bit ;
 430:	20 ff       	sbrs	r18, 0
 432:	11 c0       	rjmp	.+34     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 434:	a1 85       	ldd	r26, Z+9	; 0x09
 436:	b0 e0       	ldi	r27, 0x00	; 0
 438:	90 96       	adiw	r26, 0x20	; 32
 43a:	2c 91       	ld	r18, X
 43c:	90 97       	sbiw	r26, 0x20	; 32
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	03 84       	ldd	r0, Z+11	; 0x0b
 444:	02 c0       	rjmp	.+4      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 446:	88 0f       	add	r24, r24
 448:	99 1f       	adc	r25, r25
 44a:	0a 94       	dec	r0
 44c:	e2 f7       	brpl	.-8      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 44e:	82 2b       	or	r24, r18
 450:	90 96       	adiw	r26, 0x20	; 32
 452:	8c 93       	st	X, r24
 454:	11 c0       	rjmp	.+34     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
	else			 _SFR_IO8(D4_PORT) &= ~(1<<D4_Bit);
 456:	a1 85       	ldd	r26, Z+9	; 0x09
 458:	b0 e0       	ldi	r27, 0x00	; 0
 45a:	90 96       	adiw	r26, 0x20	; 32
 45c:	2c 91       	ld	r18, X
 45e:	90 97       	sbiw	r26, 0x20	; 32
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	03 84       	ldd	r0, Z+11	; 0x0b
 466:	02 c0       	rjmp	.+4      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 468:	88 0f       	add	r24, r24
 46a:	99 1f       	adc	r25, r25
 46c:	0a 94       	dec	r0
 46e:	e2 f7       	brpl	.-8      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 470:	80 95       	com	r24
 472:	82 23       	and	r24, r18
 474:	90 96       	adiw	r26, 0x20	; 32
 476:	8c 93       	st	X, r24

	/*SENDING proses*/
	_SFR_IO8(E_PORT)  |=   1<<E_Bit  ;
 478:	a6 81       	ldd	r26, Z+6	; 0x06
 47a:	b0 e0       	ldi	r27, 0x00	; 0
 47c:	90 96       	adiw	r26, 0x20	; 32
 47e:	4c 91       	ld	r20, X
 480:	90 97       	sbiw	r26, 0x20	; 32
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	9c 01       	movw	r18, r24
 488:	00 84       	ldd	r0, Z+8	; 0x08
 48a:	02 c0       	rjmp	.+4      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 48c:	22 0f       	add	r18, r18
 48e:	33 1f       	adc	r19, r19
 490:	0a 94       	dec	r0
 492:	e2 f7       	brpl	.-8      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 494:	24 2b       	or	r18, r20
 496:	90 96       	adiw	r26, 0x20	; 32
 498:	2c 93       	st	X, r18
 49a:	af ec       	ldi	r26, 0xCF	; 207
 49c:	b7 e0       	ldi	r27, 0x07	; 7
 49e:	11 97       	sbiw	r26, 0x01	; 1
 4a0:	f1 f7       	brne	.-4      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4a4:	00 00       	nop
	_delay_ms(E_DELAY);
	_SFR_IO8(E_PORT)  &=~(1<<E_Bit);  // All other bits untouched and E = 0
 4a6:	a6 81       	ldd	r26, Z+6	; 0x06
 4a8:	b0 e0       	ldi	r27, 0x00	; 0
 4aa:	90 96       	adiw	r26, 0x20	; 32
 4ac:	3c 91       	ld	r19, X
 4ae:	90 97       	sbiw	r26, 0x20	; 32
 4b0:	ac 01       	movw	r20, r24
 4b2:	00 84       	ldd	r0, Z+8	; 0x08
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b6:	44 0f       	add	r20, r20
 4b8:	55 1f       	adc	r21, r21
 4ba:	0a 94       	dec	r0
 4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4be:	24 2f       	mov	r18, r20
 4c0:	20 95       	com	r18
 4c2:	23 23       	and	r18, r19
 4c4:	90 96       	adiw	r26, 0x20	; 32
 4c6:	2c 93       	st	X, r18
 4c8:	af ec       	ldi	r26, 0xCF	; 207
 4ca:	b7 e0       	ldi	r27, 0x07	; 7
 4cc:	11 97       	sbiw	r26, 0x01	; 1
 4ce:	f1 f7       	brne	.-4      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4d0:	00 c0       	rjmp	.+0      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4d2:	00 00       	nop
	_delay_ms(E_DELAY);
	
	_SFR_IO8(RS_PORT) &= ~(1<<RS_Bit);
 4d4:	a0 81       	ld	r26, Z
 4d6:	b0 e0       	ldi	r27, 0x00	; 0
 4d8:	90 96       	adiw	r26, 0x20	; 32
 4da:	3c 91       	ld	r19, X
 4dc:	90 97       	sbiw	r26, 0x20	; 32
 4de:	ac 01       	movw	r20, r24
 4e0:	02 80       	ldd	r0, Z+2	; 0x02
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e4:	44 0f       	add	r20, r20
 4e6:	55 1f       	adc	r21, r21
 4e8:	0a 94       	dec	r0
 4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4ec:	24 2f       	mov	r18, r20
 4ee:	20 95       	com	r18
 4f0:	23 23       	and	r18, r19
 4f2:	90 96       	adiw	r26, 0x20	; 32
 4f4:	2c 93       	st	X, r18
	_SFR_IO8(RW_PORT) &= ~(1<<RW_Bit);
 4f6:	a3 81       	ldd	r26, Z+3	; 0x03
 4f8:	b0 e0       	ldi	r27, 0x00	; 0
 4fa:	90 96       	adiw	r26, 0x20	; 32
 4fc:	3c 91       	ld	r19, X
 4fe:	90 97       	sbiw	r26, 0x20	; 32
 500:	ac 01       	movw	r20, r24
 502:	05 80       	ldd	r0, Z+5	; 0x05
 504:	02 c0       	rjmp	.+4      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 506:	44 0f       	add	r20, r20
 508:	55 1f       	adc	r21, r21
 50a:	0a 94       	dec	r0
 50c:	e2 f7       	brpl	.-8      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 50e:	24 2f       	mov	r18, r20
 510:	20 95       	com	r18
 512:	23 23       	and	r18, r19
 514:	90 96       	adiw	r26, 0x20	; 32
 516:	2c 93       	st	X, r18
	_SFR_IO8(D7_PORT) &= ~(1<<D7_Bit);
 518:	a2 89       	ldd	r26, Z+18	; 0x12
 51a:	b0 e0       	ldi	r27, 0x00	; 0
 51c:	90 96       	adiw	r26, 0x20	; 32
 51e:	3c 91       	ld	r19, X
 520:	90 97       	sbiw	r26, 0x20	; 32
 522:	ac 01       	movw	r20, r24
 524:	04 88       	ldd	r0, Z+20	; 0x14
 526:	02 c0       	rjmp	.+4      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 528:	44 0f       	add	r20, r20
 52a:	55 1f       	adc	r21, r21
 52c:	0a 94       	dec	r0
 52e:	e2 f7       	brpl	.-8      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 530:	24 2f       	mov	r18, r20
 532:	20 95       	com	r18
 534:	23 23       	and	r18, r19
 536:	90 96       	adiw	r26, 0x20	; 32
 538:	2c 93       	st	X, r18
	_SFR_IO8(D6_PORT) &= ~(1<<D6_Bit);
 53a:	a7 85       	ldd	r26, Z+15	; 0x0f
 53c:	b0 e0       	ldi	r27, 0x00	; 0
 53e:	90 96       	adiw	r26, 0x20	; 32
 540:	3c 91       	ld	r19, X
 542:	90 97       	sbiw	r26, 0x20	; 32
 544:	ac 01       	movw	r20, r24
 546:	01 88       	ldd	r0, Z+17	; 0x11
 548:	02 c0       	rjmp	.+4      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 54a:	44 0f       	add	r20, r20
 54c:	55 1f       	adc	r21, r21
 54e:	0a 94       	dec	r0
 550:	e2 f7       	brpl	.-8      	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 552:	24 2f       	mov	r18, r20
 554:	20 95       	com	r18
 556:	23 23       	and	r18, r19
 558:	90 96       	adiw	r26, 0x20	; 32
 55a:	2c 93       	st	X, r18
	_SFR_IO8(D5_PORT) &= ~(1<<D5_Bit);
 55c:	a4 85       	ldd	r26, Z+12	; 0x0c
 55e:	b0 e0       	ldi	r27, 0x00	; 0
 560:	90 96       	adiw	r26, 0x20	; 32
 562:	3c 91       	ld	r19, X
 564:	90 97       	sbiw	r26, 0x20	; 32
 566:	ac 01       	movw	r20, r24
 568:	06 84       	ldd	r0, Z+14	; 0x0e
 56a:	02 c0       	rjmp	.+4      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56c:	44 0f       	add	r20, r20
 56e:	55 1f       	adc	r21, r21
 570:	0a 94       	dec	r0
 572:	e2 f7       	brpl	.-8      	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 574:	24 2f       	mov	r18, r20
 576:	20 95       	com	r18
 578:	23 23       	and	r18, r19
 57a:	90 96       	adiw	r26, 0x20	; 32
 57c:	2c 93       	st	X, r18
	_SFR_IO8(D4_PORT) &= ~(1<<D4_Bit);
 57e:	a1 85       	ldd	r26, Z+9	; 0x09
 580:	b0 e0       	ldi	r27, 0x00	; 0
 582:	90 96       	adiw	r26, 0x20	; 32
 584:	2c 91       	ld	r18, X
 586:	90 97       	sbiw	r26, 0x20	; 32
 588:	03 84       	ldd	r0, Z+11	; 0x0b
 58a:	02 c0       	rjmp	.+4      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 58c:	88 0f       	add	r24, r24
 58e:	99 1f       	adc	r25, r25
 590:	0a 94       	dec	r0
 592:	e2 f7       	brpl	.-8      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 594:	80 95       	com	r24
 596:	82 23       	and	r24, r18
 598:	90 96       	adiw	r26, 0x20	; 32
 59a:	8c 93       	st	X, r24
	/* SENDING Finished */
}
 59c:	df 91       	pop	r29
 59e:	cf 91       	pop	r28
 5a0:	1f 91       	pop	r17
 5a2:	0f 91       	pop	r16
 5a4:	ff 90       	pop	r15
 5a6:	ef 90       	pop	r14
 5a8:	df 90       	pop	r13
 5aa:	cf 90       	pop	r12
 5ac:	bf 90       	pop	r11
 5ae:	af 90       	pop	r10
 5b0:	9f 90       	pop	r9
 5b2:	8f 90       	pop	r8
 5b4:	08 95       	ret

000005b6 <_ZN6CH_LCD4InitEv>:
	D6_PORT = 0x1B ; D6_DDR = 0x1A ; D6_Bit = 5 ;
	D7_PORT = 0x1B ; D7_DDR = 0x1A ; D7_Bit = 6 ;	
}

void CH_LCD :: Init()//Initializes LCD
{
 5b6:	cf 93       	push	r28
 5b8:	df 93       	push	r29
 5ba:	ec 01       	movw	r28, r24
 5bc:	8f e2       	ldi	r24, 0x2F	; 47
 5be:	95 e7       	ldi	r25, 0x75	; 117
 5c0:	01 97       	sbiw	r24, 0x01	; 1
 5c2:	f1 f7       	brne	.-4      	; 0x5c0 <_ZN6CH_LCD4InitEv+0xa>
 5c4:	00 c0       	rjmp	.+0      	; 0x5c6 <_ZN6CH_LCD4InitEv+0x10>
 5c6:	00 00       	nop
	_delay_ms(15);

	/////////////////////////////	SETTING DDR		///////////////////////////
	_SFR_IO8(D4_PORT) &= ~(1<<D4_Bit) ; // THESE 5 IS GOING TO TURN D4,D5,D6,D7,EN To INPUT
 5c8:	e9 85       	ldd	r30, Y+9	; 0x09
 5ca:	f0 e0       	ldi	r31, 0x00	; 0
 5cc:	30 a1       	ldd	r19, Z+32	; 0x20
 5ce:	81 e0       	ldi	r24, 0x01	; 1
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	ac 01       	movw	r20, r24
 5d4:	0b 84       	ldd	r0, Y+11	; 0x0b
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <_ZN6CH_LCD4InitEv+0x26>
 5d8:	44 0f       	add	r20, r20
 5da:	55 1f       	adc	r21, r21
 5dc:	0a 94       	dec	r0
 5de:	e2 f7       	brpl	.-8      	; 0x5d8 <_ZN6CH_LCD4InitEv+0x22>
 5e0:	24 2f       	mov	r18, r20
 5e2:	20 95       	com	r18
 5e4:	23 23       	and	r18, r19
 5e6:	20 a3       	std	Z+32, r18	; 0x20
	_SFR_IO8(D5_PORT) &= ~(1<<D5_Bit) ;
 5e8:	ec 85       	ldd	r30, Y+12	; 0x0c
 5ea:	f0 e0       	ldi	r31, 0x00	; 0
 5ec:	30 a1       	ldd	r19, Z+32	; 0x20
 5ee:	ac 01       	movw	r20, r24
 5f0:	0e 84       	ldd	r0, Y+14	; 0x0e
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <_ZN6CH_LCD4InitEv+0x42>
 5f4:	44 0f       	add	r20, r20
 5f6:	55 1f       	adc	r21, r21
 5f8:	0a 94       	dec	r0
 5fa:	e2 f7       	brpl	.-8      	; 0x5f4 <_ZN6CH_LCD4InitEv+0x3e>
 5fc:	24 2f       	mov	r18, r20
 5fe:	20 95       	com	r18
 600:	23 23       	and	r18, r19
 602:	20 a3       	std	Z+32, r18	; 0x20
	_SFR_IO8(D6_PORT) &= ~(1<<D6_Bit) ;
 604:	ef 85       	ldd	r30, Y+15	; 0x0f
 606:	f0 e0       	ldi	r31, 0x00	; 0
 608:	30 a1       	ldd	r19, Z+32	; 0x20
 60a:	ac 01       	movw	r20, r24
 60c:	09 88       	ldd	r0, Y+17	; 0x11
 60e:	02 c0       	rjmp	.+4      	; 0x614 <_ZN6CH_LCD4InitEv+0x5e>
 610:	44 0f       	add	r20, r20
 612:	55 1f       	adc	r21, r21
 614:	0a 94       	dec	r0
 616:	e2 f7       	brpl	.-8      	; 0x610 <_ZN6CH_LCD4InitEv+0x5a>
 618:	24 2f       	mov	r18, r20
 61a:	20 95       	com	r18
 61c:	23 23       	and	r18, r19
 61e:	20 a3       	std	Z+32, r18	; 0x20
	_SFR_IO8(D7_PORT) &= ~(1<<D7_Bit) ;
 620:	ea 89       	ldd	r30, Y+18	; 0x12
 622:	f0 e0       	ldi	r31, 0x00	; 0
 624:	30 a1       	ldd	r19, Z+32	; 0x20
 626:	ac 01       	movw	r20, r24
 628:	0c 88       	ldd	r0, Y+20	; 0x14
 62a:	02 c0       	rjmp	.+4      	; 0x630 <_ZN6CH_LCD4InitEv+0x7a>
 62c:	44 0f       	add	r20, r20
 62e:	55 1f       	adc	r21, r21
 630:	0a 94       	dec	r0
 632:	e2 f7       	brpl	.-8      	; 0x62c <_ZN6CH_LCD4InitEv+0x76>
 634:	24 2f       	mov	r18, r20
 636:	20 95       	com	r18
 638:	23 23       	and	r18, r19
 63a:	20 a3       	std	Z+32, r18	; 0x20
	_SFR_IO8(E_PORT)  &= ~(1<<E_Bit);
 63c:	ee 81       	ldd	r30, Y+6	; 0x06
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	30 a1       	ldd	r19, Z+32	; 0x20
 642:	ac 01       	movw	r20, r24
 644:	08 84       	ldd	r0, Y+8	; 0x08
 646:	02 c0       	rjmp	.+4      	; 0x64c <_ZN6CH_LCD4InitEv+0x96>
 648:	44 0f       	add	r20, r20
 64a:	55 1f       	adc	r21, r21
 64c:	0a 94       	dec	r0
 64e:	e2 f7       	brpl	.-8      	; 0x648 <_ZN6CH_LCD4InitEv+0x92>
 650:	24 2f       	mov	r18, r20
 652:	20 95       	com	r18
 654:	23 23       	and	r18, r19
 656:	20 a3       	std	Z+32, r18	; 0x20
	//D4  D5  D6  D7	SETTING DDR
	//0   0   0   0
	
	_SFR_IO8(D4_DDR)  |= 1<<D4_Bit ;
 658:	ea 85       	ldd	r30, Y+10	; 0x0a
 65a:	f0 e0       	ldi	r31, 0x00	; 0
 65c:	40 a1       	ldd	r20, Z+32	; 0x20
 65e:	9c 01       	movw	r18, r24
 660:	0b 84       	ldd	r0, Y+11	; 0x0b
 662:	02 c0       	rjmp	.+4      	; 0x668 <_ZN6CH_LCD4InitEv+0xb2>
 664:	22 0f       	add	r18, r18
 666:	33 1f       	adc	r19, r19
 668:	0a 94       	dec	r0
 66a:	e2 f7       	brpl	.-8      	; 0x664 <_ZN6CH_LCD4InitEv+0xae>
 66c:	24 2b       	or	r18, r20
 66e:	20 a3       	std	Z+32, r18	; 0x20
	_SFR_IO8(D5_DDR)  |= 1<<D5_Bit ;
 670:	ed 85       	ldd	r30, Y+13	; 0x0d
 672:	f0 e0       	ldi	r31, 0x00	; 0
 674:	40 a1       	ldd	r20, Z+32	; 0x20
 676:	9c 01       	movw	r18, r24
 678:	0e 84       	ldd	r0, Y+14	; 0x0e
 67a:	02 c0       	rjmp	.+4      	; 0x680 <_ZN6CH_LCD4InitEv+0xca>
 67c:	22 0f       	add	r18, r18
 67e:	33 1f       	adc	r19, r19
 680:	0a 94       	dec	r0
 682:	e2 f7       	brpl	.-8      	; 0x67c <_ZN6CH_LCD4InitEv+0xc6>
 684:	24 2b       	or	r18, r20
 686:	20 a3       	std	Z+32, r18	; 0x20
	_SFR_IO8(D6_DDR)  |= 1<<D6_Bit ;
 688:	e8 89       	ldd	r30, Y+16	; 0x10
 68a:	f0 e0       	ldi	r31, 0x00	; 0
 68c:	40 a1       	ldd	r20, Z+32	; 0x20
 68e:	9c 01       	movw	r18, r24
 690:	09 88       	ldd	r0, Y+17	; 0x11
 692:	02 c0       	rjmp	.+4      	; 0x698 <_ZN6CH_LCD4InitEv+0xe2>
 694:	22 0f       	add	r18, r18
 696:	33 1f       	adc	r19, r19
 698:	0a 94       	dec	r0
 69a:	e2 f7       	brpl	.-8      	; 0x694 <_ZN6CH_LCD4InitEv+0xde>
 69c:	24 2b       	or	r18, r20
 69e:	20 a3       	std	Z+32, r18	; 0x20
	_SFR_IO8(D7_DDR)  |= 1<<D7_Bit ;
 6a0:	eb 89       	ldd	r30, Y+19	; 0x13
 6a2:	f0 e0       	ldi	r31, 0x00	; 0
 6a4:	40 a1       	ldd	r20, Z+32	; 0x20
 6a6:	9c 01       	movw	r18, r24
 6a8:	0c 88       	ldd	r0, Y+20	; 0x14
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <_ZN6CH_LCD4InitEv+0xfa>
 6ac:	22 0f       	add	r18, r18
 6ae:	33 1f       	adc	r19, r19
 6b0:	0a 94       	dec	r0
 6b2:	e2 f7       	brpl	.-8      	; 0x6ac <_ZN6CH_LCD4InitEv+0xf6>
 6b4:	24 2b       	or	r18, r20
 6b6:	20 a3       	std	Z+32, r18	; 0x20
	_SFR_IO8(E_DDR)   |= 1<<E_Bit  ;
 6b8:	ef 81       	ldd	r30, Y+7	; 0x07
 6ba:	f0 e0       	ldi	r31, 0x00	; 0
 6bc:	40 a1       	ldd	r20, Z+32	; 0x20
 6be:	9c 01       	movw	r18, r24
 6c0:	08 84       	ldd	r0, Y+8	; 0x08
 6c2:	02 c0       	rjmp	.+4      	; 0x6c8 <_ZN6CH_LCD4InitEv+0x112>
 6c4:	22 0f       	add	r18, r18
 6c6:	33 1f       	adc	r19, r19
 6c8:	0a 94       	dec	r0
 6ca:	e2 f7       	brpl	.-8      	; 0x6c4 <_ZN6CH_LCD4InitEv+0x10e>
 6cc:	24 2b       	or	r18, r20
 6ce:	20 a3       	std	Z+32, r18	; 0x20
	_SFR_IO8(RS_DDR)  |= 1<<RS_Bit ;
 6d0:	e9 81       	ldd	r30, Y+1	; 0x01
 6d2:	f0 e0       	ldi	r31, 0x00	; 0
 6d4:	40 a1       	ldd	r20, Z+32	; 0x20
 6d6:	9c 01       	movw	r18, r24
 6d8:	0a 80       	ldd	r0, Y+2	; 0x02
 6da:	02 c0       	rjmp	.+4      	; 0x6e0 <_ZN6CH_LCD4InitEv+0x12a>
 6dc:	22 0f       	add	r18, r18
 6de:	33 1f       	adc	r19, r19
 6e0:	0a 94       	dec	r0
 6e2:	e2 f7       	brpl	.-8      	; 0x6dc <_ZN6CH_LCD4InitEv+0x126>
 6e4:	24 2b       	or	r18, r20
 6e6:	20 a3       	std	Z+32, r18	; 0x20
	_SFR_IO8(RW_DDR)  |= 1<<RW_Bit ;
 6e8:	ec 81       	ldd	r30, Y+4	; 0x04
 6ea:	f0 e0       	ldi	r31, 0x00	; 0
 6ec:	40 a1       	ldd	r20, Z+32	; 0x20
 6ee:	9c 01       	movw	r18, r24
 6f0:	0d 80       	ldd	r0, Y+5	; 0x05
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <_ZN6CH_LCD4InitEv+0x142>
 6f4:	22 0f       	add	r18, r18
 6f6:	33 1f       	adc	r19, r19
 6f8:	0a 94       	dec	r0
 6fa:	e2 f7       	brpl	.-8      	; 0x6f4 <_ZN6CH_LCD4InitEv+0x13e>
 6fc:	24 2b       	or	r18, r20
 6fe:	20 a3       	std	Z+32, r18	; 0x20
	//D4  D5  D6  D7  E  RS  RW			SETTING DDR
	//1   1   1	  1   1  1   1
	/////////////////////////////	SETTING DDR	DONE	///////////////////////////

	//_SFR_IO8(RS_PORT) |=   1<<RS_Bit ;
	_SFR_IO8(RS_PORT) &= ~(1<<RS_Bit);
 700:	e8 81       	ld	r30, Y
 702:	f0 e0       	ldi	r31, 0x00	; 0
 704:	30 a1       	ldd	r19, Z+32	; 0x20
 706:	ac 01       	movw	r20, r24
 708:	0a 80       	ldd	r0, Y+2	; 0x02
 70a:	02 c0       	rjmp	.+4      	; 0x710 <_ZN6CH_LCD4InitEv+0x15a>
 70c:	44 0f       	add	r20, r20
 70e:	55 1f       	adc	r21, r21
 710:	0a 94       	dec	r0
 712:	e2 f7       	brpl	.-8      	; 0x70c <_ZN6CH_LCD4InitEv+0x156>
 714:	24 2f       	mov	r18, r20
 716:	20 95       	com	r18
 718:	23 23       	and	r18, r19
 71a:	20 a3       	std	Z+32, r18	; 0x20
	
	//_SFR_IO8(RW_PORT) |=   1<<RW_Bit ;
	_SFR_IO8(RW_PORT) &= ~(1<<RW_Bit);
 71c:	eb 81       	ldd	r30, Y+3	; 0x03
 71e:	f0 e0       	ldi	r31, 0x00	; 0
 720:	30 a1       	ldd	r19, Z+32	; 0x20
 722:	ac 01       	movw	r20, r24
 724:	0d 80       	ldd	r0, Y+5	; 0x05
 726:	02 c0       	rjmp	.+4      	; 0x72c <_ZN6CH_LCD4InitEv+0x176>
 728:	44 0f       	add	r20, r20
 72a:	55 1f       	adc	r21, r21
 72c:	0a 94       	dec	r0
 72e:	e2 f7       	brpl	.-8      	; 0x728 <_ZN6CH_LCD4InitEv+0x172>
 730:	24 2f       	mov	r18, r20
 732:	20 95       	com	r18
 734:	23 23       	and	r18, r19
 736:	20 a3       	std	Z+32, r18	; 0x20
	
	//_SFR_IO8(D7_PORT) |=   1<<D7_Bit ;
	_SFR_IO8(D7_PORT) &= ~(1<<D7_Bit);
 738:	ea 89       	ldd	r30, Y+18	; 0x12
 73a:	f0 e0       	ldi	r31, 0x00	; 0
 73c:	30 a1       	ldd	r19, Z+32	; 0x20
 73e:	ac 01       	movw	r20, r24
 740:	0c 88       	ldd	r0, Y+20	; 0x14
 742:	02 c0       	rjmp	.+4      	; 0x748 <_ZN6CH_LCD4InitEv+0x192>
 744:	44 0f       	add	r20, r20
 746:	55 1f       	adc	r21, r21
 748:	0a 94       	dec	r0
 74a:	e2 f7       	brpl	.-8      	; 0x744 <_ZN6CH_LCD4InitEv+0x18e>
 74c:	24 2f       	mov	r18, r20
 74e:	20 95       	com	r18
 750:	23 23       	and	r18, r19
 752:	20 a3       	std	Z+32, r18	; 0x20

	//_SFR_IO8(D6_PORT) |=   1<<D6_Bit ;
	_SFR_IO8(D6_PORT) &= ~(1<<D6_Bit);
 754:	ef 85       	ldd	r30, Y+15	; 0x0f
 756:	f0 e0       	ldi	r31, 0x00	; 0
 758:	30 a1       	ldd	r19, Z+32	; 0x20
 75a:	ac 01       	movw	r20, r24
 75c:	09 88       	ldd	r0, Y+17	; 0x11
 75e:	02 c0       	rjmp	.+4      	; 0x764 <_ZN6CH_LCD4InitEv+0x1ae>
 760:	44 0f       	add	r20, r20
 762:	55 1f       	adc	r21, r21
 764:	0a 94       	dec	r0
 766:	e2 f7       	brpl	.-8      	; 0x760 <_ZN6CH_LCD4InitEv+0x1aa>
 768:	24 2f       	mov	r18, r20
 76a:	20 95       	com	r18
 76c:	23 23       	and	r18, r19
 76e:	20 a3       	std	Z+32, r18	; 0x20
	
	_SFR_IO8(D5_PORT) |=   1<<D5_Bit ;
 770:	ec 85       	ldd	r30, Y+12	; 0x0c
 772:	f0 e0       	ldi	r31, 0x00	; 0
 774:	40 a1       	ldd	r20, Z+32	; 0x20
 776:	9c 01       	movw	r18, r24
 778:	0e 84       	ldd	r0, Y+14	; 0x0e
 77a:	02 c0       	rjmp	.+4      	; 0x780 <_ZN6CH_LCD4InitEv+0x1ca>
 77c:	22 0f       	add	r18, r18
 77e:	33 1f       	adc	r19, r19
 780:	0a 94       	dec	r0
 782:	e2 f7       	brpl	.-8      	; 0x77c <_ZN6CH_LCD4InitEv+0x1c6>
 784:	24 2b       	or	r18, r20
 786:	20 a3       	std	Z+32, r18	; 0x20
	//_SFR_IO8(D5_PORT) &= ~(1<<D5_Bit);
	
	//_SFR_IO8(D4_PORT) |=   1<<D4_Bit ;
	_SFR_IO8(D4_PORT) &= ~(1<<D4_Bit);
 788:	e9 85       	ldd	r30, Y+9	; 0x09
 78a:	f0 e0       	ldi	r31, 0x00	; 0
 78c:	30 a1       	ldd	r19, Z+32	; 0x20
 78e:	ac 01       	movw	r20, r24
 790:	0b 84       	ldd	r0, Y+11	; 0x0b
 792:	02 c0       	rjmp	.+4      	; 0x798 <_ZN6CH_LCD4InitEv+0x1e2>
 794:	44 0f       	add	r20, r20
 796:	55 1f       	adc	r21, r21
 798:	0a 94       	dec	r0
 79a:	e2 f7       	brpl	.-8      	; 0x794 <_ZN6CH_LCD4InitEv+0x1de>
 79c:	24 2f       	mov	r18, r20
 79e:	20 95       	com	r18
 7a0:	23 23       	and	r18, r19
 7a2:	20 a3       	std	Z+32, r18	; 0x20

	//SENDING
	_SFR_IO8(E_PORT)  |=   1<<E_Bit  ;
 7a4:	ee 81       	ldd	r30, Y+6	; 0x06
 7a6:	f0 e0       	ldi	r31, 0x00	; 0
 7a8:	40 a1       	ldd	r20, Z+32	; 0x20
 7aa:	9c 01       	movw	r18, r24
 7ac:	08 84       	ldd	r0, Y+8	; 0x08
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <_ZN6CH_LCD4InitEv+0x1fe>
 7b0:	22 0f       	add	r18, r18
 7b2:	33 1f       	adc	r19, r19
 7b4:	0a 94       	dec	r0
 7b6:	e2 f7       	brpl	.-8      	; 0x7b0 <_ZN6CH_LCD4InitEv+0x1fa>
 7b8:	24 2b       	or	r18, r20
 7ba:	20 a3       	std	Z+32, r18	; 0x20
 7bc:	ef ec       	ldi	r30, 0xCF	; 207
 7be:	f7 e0       	ldi	r31, 0x07	; 7
 7c0:	31 97       	sbiw	r30, 0x01	; 1
 7c2:	f1 f7       	brne	.-4      	; 0x7c0 <_ZN6CH_LCD4InitEv+0x20a>
 7c4:	00 c0       	rjmp	.+0      	; 0x7c6 <_ZN6CH_LCD4InitEv+0x210>
 7c6:	00 00       	nop
	_delay_ms(E_DELAY);
	_SFR_IO8(E_PORT)  &=~(1<<E_Bit);  // All other bits untouched and E = 0
 7c8:	ee 81       	ldd	r30, Y+6	; 0x06
 7ca:	f0 e0       	ldi	r31, 0x00	; 0
 7cc:	20 a1       	ldd	r18, Z+32	; 0x20
 7ce:	08 84       	ldd	r0, Y+8	; 0x08
 7d0:	02 c0       	rjmp	.+4      	; 0x7d6 <_ZN6CH_LCD4InitEv+0x220>
 7d2:	88 0f       	add	r24, r24
 7d4:	99 1f       	adc	r25, r25
 7d6:	0a 94       	dec	r0
 7d8:	e2 f7       	brpl	.-8      	; 0x7d2 <_ZN6CH_LCD4InitEv+0x21c>
 7da:	80 95       	com	r24
 7dc:	82 23       	and	r24, r18
 7de:	80 a3       	std	Z+32, r24	; 0x20
 7e0:	8f ec       	ldi	r24, 0xCF	; 207
 7e2:	97 e0       	ldi	r25, 0x07	; 7
 7e4:	01 97       	sbiw	r24, 0x01	; 1
 7e6:	f1 f7       	brne	.-4      	; 0x7e4 <_ZN6CH_LCD4InitEv+0x22e>
 7e8:	00 c0       	rjmp	.+0      	; 0x7ea <_ZN6CH_LCD4InitEv+0x234>
 7ea:	00 00       	nop
	_delay_ms(E_DELAY);

	SendCommand(0,0,0B00100000);//3
 7ec:	20 e2       	ldi	r18, 0x20	; 32
 7ee:	40 e0       	ldi	r20, 0x00	; 0
 7f0:	60 e0       	ldi	r22, 0x00	; 0
 7f2:	ce 01       	movw	r24, r28
 7f4:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN6CH_LCD11SendCommandEhhh>
 7f8:	ef ec       	ldi	r30, 0xCF	; 207
 7fa:	f7 e0       	ldi	r31, 0x07	; 7
 7fc:	31 97       	sbiw	r30, 0x01	; 1
 7fe:	f1 f7       	brne	.-4      	; 0x7fc <_ZN6CH_LCD4InitEv+0x246>
 800:	00 c0       	rjmp	.+0      	; 0x802 <_ZN6CH_LCD4InitEv+0x24c>
 802:	00 00       	nop
	_delay_ms(E_DELAY);
	SendCommand(0,0,0B00001100);//4
 804:	2c e0       	ldi	r18, 0x0C	; 12
 806:	40 e0       	ldi	r20, 0x00	; 0
 808:	60 e0       	ldi	r22, 0x00	; 0
 80a:	ce 01       	movw	r24, r28
 80c:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN6CH_LCD11SendCommandEhhh>
 810:	8f ec       	ldi	r24, 0xCF	; 207
 812:	97 e0       	ldi	r25, 0x07	; 7
 814:	01 97       	sbiw	r24, 0x01	; 1
 816:	f1 f7       	brne	.-4      	; 0x814 <_ZN6CH_LCD4InitEv+0x25e>
 818:	00 c0       	rjmp	.+0      	; 0x81a <_ZN6CH_LCD4InitEv+0x264>
 81a:	00 00       	nop
	_delay_ms(E_DELAY);
	SendCommand(0,0,0B00000110);//5 Entry mode set
 81c:	26 e0       	ldi	r18, 0x06	; 6
 81e:	40 e0       	ldi	r20, 0x00	; 0
 820:	60 e0       	ldi	r22, 0x00	; 0
 822:	ce 01       	movw	r24, r28
 824:	0e 94 69 00 	call	0xd2	; 0xd2 <_ZN6CH_LCD11SendCommandEhhh>
 828:	ef ec       	ldi	r30, 0xCF	; 207
 82a:	f7 e0       	ldi	r31, 0x07	; 7
 82c:	31 97       	sbiw	r30, 0x01	; 1
 82e:	f1 f7       	brne	.-4      	; 0x82c <_ZN6CH_LCD4InitEv+0x276>
 830:	00 c0       	rjmp	.+0      	; 0x832 <_ZN6CH_LCD4InitEv+0x27c>
 832:	00 00       	nop
	_delay_ms(E_DELAY);


}
 834:	df 91       	pop	r29
 836:	cf 91       	pop	r28
 838:	08 95       	ret

0000083a <main>:


	public:
	CH_LCD ();
	
	void SetRSPin(uint8_t ADD_PORT , uint8_t ADD_DDR , uint8_t Bit) { RS_PORT = ADD_PORT ; RS_DDR = ADD_DDR ; RS_Bit = Bit ; }
 83a:	e0 e6       	ldi	r30, 0x60	; 96
 83c:	f0 e0       	ldi	r31, 0x00	; 0
 83e:	95 e1       	ldi	r25, 0x15	; 21
 840:	90 83       	st	Z, r25
 842:	84 e1       	ldi	r24, 0x14	; 20
 844:	81 83       	std	Z+1, r24	; 0x01
 846:	12 82       	std	Z+2, r1	; 0x02
	void SetRWPin(uint8_t ADD_PORT , uint8_t ADD_DDR , uint8_t Bit) { RW_PORT = ADD_PORT ; RW_DDR = ADD_DDR ; RW_Bit = Bit ; }
 848:	93 83       	std	Z+3, r25	; 0x03
 84a:	84 83       	std	Z+4, r24	; 0x04
 84c:	21 e0       	ldi	r18, 0x01	; 1
 84e:	25 83       	std	Z+5, r18	; 0x05
	void SetEPin(uint8_t ADD_PORT , uint8_t ADD_DDR , uint8_t Bit) { E_PORT = ADD_PORT ; E_DDR = ADD_DDR ; E_Bit = Bit ; }
 850:	96 83       	std	Z+6, r25	; 0x06
 852:	87 83       	std	Z+7, r24	; 0x07
 854:	22 e0       	ldi	r18, 0x02	; 2
 856:	20 87       	std	Z+8, r18	; 0x08
	void SetD4Pin(uint8_t ADD_PORT , uint8_t ADD_DDR , uint8_t Bit) { D4_PORT = ADD_PORT ; D4_DDR = ADD_DDR ; D4_Bit = Bit ; }
 858:	91 87       	std	Z+9, r25	; 0x09
 85a:	82 87       	std	Z+10, r24	; 0x0a
 85c:	23 e0       	ldi	r18, 0x03	; 3
 85e:	23 87       	std	Z+11, r18	; 0x0b
	void SetD5Pin(uint8_t ADD_PORT , uint8_t ADD_DDR , uint8_t Bit) { D5_PORT = ADD_PORT ; D5_DDR = ADD_DDR ; D5_Bit = Bit ; }
 860:	94 87       	std	Z+12, r25	; 0x0c
 862:	85 87       	std	Z+13, r24	; 0x0d
 864:	24 e0       	ldi	r18, 0x04	; 4
 866:	26 87       	std	Z+14, r18	; 0x0e
	void SetD6Pin(uint8_t ADD_PORT , uint8_t ADD_DDR , uint8_t Bit) { D6_PORT = ADD_PORT ; D6_DDR = ADD_DDR ; D6_Bit = Bit ; }
 868:	97 87       	std	Z+15, r25	; 0x0f
 86a:	80 8b       	std	Z+16, r24	; 0x10
 86c:	25 e0       	ldi	r18, 0x05	; 5
 86e:	21 8b       	std	Z+17, r18	; 0x11
	void SetD7Pin(uint8_t ADD_PORT , uint8_t ADD_DDR , uint8_t Bit) { D7_PORT = ADD_PORT ; D7_DDR = ADD_DDR ; D7_Bit = Bit ; }
 870:	92 8b       	std	Z+18, r25	; 0x12
 872:	83 8b       	std	Z+19, r24	; 0x13
 874:	86 e0       	ldi	r24, 0x06	; 6
 876:	84 8b       	std	Z+20, r24	; 0x14
	LCD1.SetEPin  (ADD(PORTC),ADD(DDRC),2);
	LCD1.SetD4Pin (ADD(PORTC),ADD(DDRC),3);
	LCD1.SetD5Pin (ADD(PORTC),ADD(DDRC),4);
	LCD1.SetD6Pin (ADD(PORTC),ADD(DDRC),5);
	LCD1.SetD7Pin (ADD(PORTC),ADD(DDRC),6);
	LCD1.Init();
 878:	cf 01       	movw	r24, r30
 87a:	0e 94 db 02 	call	0x5b6	; 0x5b6 <_ZN6CH_LCD4InitEv>
 87e:	8f ec       	ldi	r24, 0xCF	; 207
 880:	97 e0       	ldi	r25, 0x07	; 7
 882:	01 97       	sbiw	r24, 0x01	; 1
 884:	f1 f7       	brne	.-4      	; 0x882 <__stack+0x23>
 886:	00 c0       	rjmp	.+0      	; 0x888 <__stack+0x29>
 888:	00 00       	nop
 88a:	ff cf       	rjmp	.-2      	; 0x88a <__stack+0x2b>

0000088c <_GLOBAL__sub_I__ZN6CH_LCDC2Ev>:
#define _CH_LCD_
#define delay 1
#include "C:\Users\ICTP17-Askari\Github\MYLCDLIB\mlcd_CPU\Lib\mlcd.h"
#include "C:\Users\ICTP17-Askari\Github\MYLCDLIB\mlcd_CPU\Lib\mlcd.cpp"

CH_LCD LCD1;
 88c:	80 e6       	ldi	r24, 0x60	; 96
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 94 4a 00 	call	0x94	; 0x94 <_ZN6CH_LCDC1Ev>
 894:	08 95       	ret

00000896 <__tablejump2__>:
 896:	ee 0f       	add	r30, r30
 898:	ff 1f       	adc	r31, r31
 89a:	05 90       	lpm	r0, Z+
 89c:	f4 91       	lpm	r31, Z
 89e:	e0 2d       	mov	r30, r0
 8a0:	09 94       	ijmp

000008a2 <_exit>:
 8a2:	f8 94       	cli

000008a4 <__stop_program>:
 8a4:	ff cf       	rjmp	.-2      	; 0x8a4 <__stop_program>
